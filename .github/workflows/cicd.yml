name: Continuos Integration
on: [ push ]

jobs:
  Build:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - run: ls -laR src/

      - name: Set build variables
        id: vars
        run: |
          echo ::set-output name=short_ref::${GITHUB_REF#refs/*/}
          echo ::set-output name=cur_version::$(git describe --abbrev=0 --tags)

      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install --upgrade pipenv
          pipenv install --dev

      - name: Run tests
        run: pipenv run python -m pytest

      - name: Bump version
        run: |
          pipenv run bumpversion --allow-dirty --current-version '0.0.0' --new-version "${{ steps.vars.outputs.cur_version }}" patch ./setup.py
          pipenv run bumpversion --allow-dirty --current-version "${{ steps.vars.outputs.cur_version }}" patch ./setup.py

      - name: Run build
        run: pipenv run python -m build

      - name: Publish
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          pipenv run python -m twine upload dist/*

      - name: Tag current version
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          newversion=$(pipenv run python ./setup.py --version)
          echo $newversion

          git config --global user.email "build_agent@example.com"
          git config --global user.name "GitHub Build Agent"

          git tag "$newversion"
          git push --tags
